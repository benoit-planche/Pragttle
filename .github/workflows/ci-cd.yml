name: RAGnagna CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      frontend-changed: ${{ steps.changes.outputs.frontend }}
      backend-changed: ${{ steps.changes.outputs.backend }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 2

    - name: Detect changes
      id: changes
      run: |
        # Get list of changed files
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          CHANGED_FILES=$(git diff --name-only origin/main...HEAD)
        else
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD)
        fi
        
        echo "Changed files:"
        echo "$CHANGED_FILES"
        
        # Check if frontend files changed
        if echo "$CHANGED_FILES" | grep -q "^apps/frontend/"; then
          echo "frontend=true" >> $GITHUB_OUTPUT
          echo "Frontend changes detected"
        else
          echo "frontend=false" >> $GITHUB_OUTPUT
          echo "No frontend changes"
        fi
        
        # Check if backend files changed
        # if echo "$CHANGED_FILES" | grep -q "^apps/backend/"; then
        #   echo "backend=true" >> $GITHUB_OUTPUT
        #   echo "Backend changes detected"
        # else
        #   echo "backend=false" >> $GITHUB_OUTPUT
        #   echo "No backend changes"
        # fi

  test-frontend:
    needs: detect-changes
    if: needs.detect-changes.outputs.frontend-changed == 'true'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: apps/frontend/package-lock.json

    - name: Install frontend dependencies
      run: |
        cd apps/frontend
        npm ci

    - name: Run frontend tests
      run: |
        cd apps/frontend
        npm run lint
        npm run build

  test-backend:
    needs: detect-changes
    if: needs.detect-changes.outputs.backend-changed == 'true'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: |
          apps/backend/target
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ runner.os }}-cargo-${{ hashFiles('apps/backend/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Build backend
      run: |
        cd apps/backend
        cargo build --verbose
        cargo test --verbose

  build-and-push:
    needs: [detect-changes, test-frontend, test-backend]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
      packages: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver: docker-container

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push frontend image
      if: needs.detect-changes.outputs.frontend-changed == 'true'
      uses: docker/build-push-action@v5
      with:
        context: ./apps/frontend
        push: true
        tags: ghcr.io/benoit-planche/ragnagna/frontend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push backend image
      if: needs.detect-changes.outputs.backend-changed == 'true'
      uses: docker/build-push-action@v5
      with:
        context: ./apps/backend
        push: true
        tags: ghcr.io/benoit-planche/ragnagna/backend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Skip build notification
      if: needs.detect-changes.outputs.frontend-changed == 'false' && needs.detect-changes.outputs.backend-changed == 'false'
      run: |
        echo "🔄 No changes detected in frontend or backend"
        echo "⏭️ Skipping build and push"

  notify:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - name: Notify deployment
      run: |
        echo "🎉 CI/CD Pipeline completed!"
        if [ "${{ needs.detect-changes.outputs.frontend-changed }}" = "true" ]; then
          echo "📦 Frontend: ghcr.io/benoit-planche/ragnagna/frontend:latest"
        fi
        if [ "${{ needs.detect-changes.outputs.backend-changed }}" = "true" ]; then
          echo "📦 Backend: ghcr.io/benoit-planche/ragnagna/backend:latest"
        fi
        echo ""
        echo "🔄 Argo CD will automatically sync and deploy the new images"
        echo "📊 Check Argo CD UI: http://localhost:8081"
        echo "🌐 Access application: http://ragna.local:8080"
